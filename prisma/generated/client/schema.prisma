// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
model Post {
  blog_id     Int    @id @default(autoincrement())
  blog_key    String @unique
  blog_title  String
  likes_count Int[]
  views_count Int
}

model Email {
  id         Int       @id @default(autoincrement())
  email      String
  code       String
  created_at DateTime? @default(now())
  expired_at DateTime
  status     Int
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @blog.Text
  access_token      String? @blog.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @blog.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @default("https://blog-1302483222.cos.ap-shanghai.myqcloud.com/images.jpg")
  accounts      Account[]
  sessions      Session[]
}

// model User {
//   id         Int       @id @default(autoincrement())
//   email      String    @unique
//   created_at DateTime? @default(now())
//   updated_at DateTime? @default(now())
//   password   String
//   name       String
//   image      String    @default("https://blog-1302483222.cos.ap-shanghai.myqcloud.com/images.jpg")
// }

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource blog {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}
